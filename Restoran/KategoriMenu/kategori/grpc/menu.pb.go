// Code generated by protoc-gen-go. DO NOT EDIT.
// source: menu.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	menu.proto

It has these top-level messages:
	AddKategoriMenuReq
	ReadKategoriMenuByKategoriMenuReq
	ReadKategoriMenuByKategoriMenuResp
	ReadKategoriMenuResp
	UpdateKategoriMenurReq
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddKategoriMenuReq struct {
	Kategorimenu string `protobuf:"bytes,1,opt,name=kategorimenu" json:"kategorimenu,omitempty"`
	Deskripsi    string `protobuf:"bytes,2,opt,name=deskripsi" json:"deskripsi,omitempty"`
	Status       int32  `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	Createdby    string `protobuf:"bytes,4,opt,name=createdby" json:"createdby,omitempty"`
}

func (m *AddKategoriMenuReq) Reset()                    { *m = AddKategoriMenuReq{} }
func (m *AddKategoriMenuReq) String() string            { return proto.CompactTextString(m) }
func (*AddKategoriMenuReq) ProtoMessage()               {}
func (*AddKategoriMenuReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddKategoriMenuReq) GetKategorimenu() string {
	if m != nil {
		return m.Kategorimenu
	}
	return ""
}

func (m *AddKategoriMenuReq) GetDeskripsi() string {
	if m != nil {
		return m.Deskripsi
	}
	return ""
}

func (m *AddKategoriMenuReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AddKategoriMenuReq) GetCreatedby() string {
	if m != nil {
		return m.Createdby
	}
	return ""
}

type ReadKategoriMenuByKategoriMenuReq struct {
	Kategorimenu string `protobuf:"bytes,1,opt,name=kategorimenu" json:"kategorimenu,omitempty"`
}

func (m *ReadKategoriMenuByKategoriMenuReq) Reset()         { *m = ReadKategoriMenuByKategoriMenuReq{} }
func (m *ReadKategoriMenuByKategoriMenuReq) String() string { return proto.CompactTextString(m) }
func (*ReadKategoriMenuByKategoriMenuReq) ProtoMessage()    {}
func (*ReadKategoriMenuByKategoriMenuReq) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1}
}

func (m *ReadKategoriMenuByKategoriMenuReq) GetKategorimenu() string {
	if m != nil {
		return m.Kategorimenu
	}
	return ""
}

type ReadKategoriMenuByKategoriMenuResp struct {
	Idkategorimenu int32  `protobuf:"varint,1,opt,name=idkategorimenu" json:"idkategorimenu,omitempty"`
	Kategorimenu   string `protobuf:"bytes,2,opt,name=kategorimenu" json:"kategorimenu,omitempty"`
	Deskripsi      string `protobuf:"bytes,3,opt,name=deskripsi" json:"deskripsi,omitempty"`
	Status         int32  `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	Createdby      string `protobuf:"bytes,5,opt,name=createdby" json:"createdby,omitempty"`
}

func (m *ReadKategoriMenuByKategoriMenuResp) Reset()         { *m = ReadKategoriMenuByKategoriMenuResp{} }
func (m *ReadKategoriMenuByKategoriMenuResp) String() string { return proto.CompactTextString(m) }
func (*ReadKategoriMenuByKategoriMenuResp) ProtoMessage()    {}
func (*ReadKategoriMenuByKategoriMenuResp) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2}
}

func (m *ReadKategoriMenuByKategoriMenuResp) GetIdkategorimenu() int32 {
	if m != nil {
		return m.Idkategorimenu
	}
	return 0
}

func (m *ReadKategoriMenuByKategoriMenuResp) GetKategorimenu() string {
	if m != nil {
		return m.Kategorimenu
	}
	return ""
}

func (m *ReadKategoriMenuByKategoriMenuResp) GetDeskripsi() string {
	if m != nil {
		return m.Deskripsi
	}
	return ""
}

func (m *ReadKategoriMenuByKategoriMenuResp) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReadKategoriMenuByKategoriMenuResp) GetCreatedby() string {
	if m != nil {
		return m.Createdby
	}
	return ""
}

type ReadKategoriMenuResp struct {
	AllKategoriMenu []*ReadKategoriMenuByKategoriMenuResp `protobuf:"bytes,1,rep,name=allKategoriMenu" json:"allKategoriMenu,omitempty"`
}

func (m *ReadKategoriMenuResp) Reset()                    { *m = ReadKategoriMenuResp{} }
func (m *ReadKategoriMenuResp) String() string            { return proto.CompactTextString(m) }
func (*ReadKategoriMenuResp) ProtoMessage()               {}
func (*ReadKategoriMenuResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadKategoriMenuResp) GetAllKategoriMenu() []*ReadKategoriMenuByKategoriMenuResp {
	if m != nil {
		return m.AllKategoriMenu
	}
	return nil
}

type UpdateKategoriMenurReq struct {
	Idkategorimenu int32  `protobuf:"varint,1,opt,name=idkategorimenu" json:"idkategorimenu,omitempty"`
	Kategorimenu   string `protobuf:"bytes,2,opt,name=kategorimenu" json:"kategorimenu,omitempty"`
	Deskripsi      string `protobuf:"bytes,3,opt,name=deskripsi" json:"deskripsi,omitempty"`
	Status         int32  `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	UpdateBy       string `protobuf:"bytes,5,opt,name=updateBy" json:"updateBy,omitempty"`
}

func (m *UpdateKategoriMenurReq) Reset()                    { *m = UpdateKategoriMenurReq{} }
func (m *UpdateKategoriMenurReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateKategoriMenurReq) ProtoMessage()               {}
func (*UpdateKategoriMenurReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UpdateKategoriMenurReq) GetIdkategorimenu() int32 {
	if m != nil {
		return m.Idkategorimenu
	}
	return 0
}

func (m *UpdateKategoriMenurReq) GetKategorimenu() string {
	if m != nil {
		return m.Kategorimenu
	}
	return ""
}

func (m *UpdateKategoriMenurReq) GetDeskripsi() string {
	if m != nil {
		return m.Deskripsi
	}
	return ""
}

func (m *UpdateKategoriMenurReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *UpdateKategoriMenurReq) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func init() {
	proto.RegisterType((*AddKategoriMenuReq)(nil), "grpc.AddKategoriMenuReq")
	proto.RegisterType((*ReadKategoriMenuByKategoriMenuReq)(nil), "grpc.ReadKategoriMenuByKategoriMenuReq")
	proto.RegisterType((*ReadKategoriMenuByKategoriMenuResp)(nil), "grpc.ReadKategoriMenuByKategoriMenuResp")
	proto.RegisterType((*ReadKategoriMenuResp)(nil), "grpc.ReadKategoriMenuResp")
	proto.RegisterType((*UpdateKategoriMenurReq)(nil), "grpc.UpdateKategoriMenurReq")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for KategoriMenuService service

type KategoriMenuServiceClient interface {
	AddKategoriMenu(ctx context.Context, in *AddKategoriMenuReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
	ReadKategoriMenuByKategoriMenu(ctx context.Context, in *ReadKategoriMenuByKategoriMenuReq, opts ...grpc1.CallOption) (*ReadKategoriMenuByKategoriMenuResp, error)
	ReadKategoriMenu(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadKategoriMenuResp, error)
	UpdateKategoriMenu(ctx context.Context, in *UpdateKategoriMenurReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
}

type kategoriMenuServiceClient struct {
	cc *grpc1.ClientConn
}

func NewKategoriMenuServiceClient(cc *grpc1.ClientConn) KategoriMenuServiceClient {
	return &kategoriMenuServiceClient{cc}
}

func (c *kategoriMenuServiceClient) AddKategoriMenu(ctx context.Context, in *AddKategoriMenuReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.KategoriMenuService/AddKategoriMenu", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kategoriMenuServiceClient) ReadKategoriMenuByKategoriMenu(ctx context.Context, in *ReadKategoriMenuByKategoriMenuReq, opts ...grpc1.CallOption) (*ReadKategoriMenuByKategoriMenuResp, error) {
	out := new(ReadKategoriMenuByKategoriMenuResp)
	err := grpc1.Invoke(ctx, "/grpc.KategoriMenuService/ReadKategoriMenuByKategoriMenu", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kategoriMenuServiceClient) ReadKategoriMenu(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadKategoriMenuResp, error) {
	out := new(ReadKategoriMenuResp)
	err := grpc1.Invoke(ctx, "/grpc.KategoriMenuService/ReadKategoriMenu", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kategoriMenuServiceClient) UpdateKategoriMenu(ctx context.Context, in *UpdateKategoriMenurReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.KategoriMenuService/UpdateKategoriMenu", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for KategoriMenuService service

type KategoriMenuServiceServer interface {
	AddKategoriMenu(context.Context, *AddKategoriMenuReq) (*google_protobuf.Empty, error)
	ReadKategoriMenuByKategoriMenu(context.Context, *ReadKategoriMenuByKategoriMenuReq) (*ReadKategoriMenuByKategoriMenuResp, error)
	ReadKategoriMenu(context.Context, *google_protobuf.Empty) (*ReadKategoriMenuResp, error)
	UpdateKategoriMenu(context.Context, *UpdateKategoriMenurReq) (*google_protobuf.Empty, error)
}

func RegisterKategoriMenuServiceServer(s *grpc1.Server, srv KategoriMenuServiceServer) {
	s.RegisterService(&_KategoriMenuService_serviceDesc, srv)
}

func _KategoriMenuService_AddKategoriMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddKategoriMenuReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KategoriMenuServiceServer).AddKategoriMenu(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.KategoriMenuService/AddKategoriMenu",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KategoriMenuServiceServer).AddKategoriMenu(ctx, req.(*AddKategoriMenuReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _KategoriMenuService_ReadKategoriMenuByKategoriMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadKategoriMenuByKategoriMenuReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KategoriMenuServiceServer).ReadKategoriMenuByKategoriMenu(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.KategoriMenuService/ReadKategoriMenuByKategoriMenu",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KategoriMenuServiceServer).ReadKategoriMenuByKategoriMenu(ctx, req.(*ReadKategoriMenuByKategoriMenuReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _KategoriMenuService_ReadKategoriMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KategoriMenuServiceServer).ReadKategoriMenu(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.KategoriMenuService/ReadKategoriMenu",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KategoriMenuServiceServer).ReadKategoriMenu(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _KategoriMenuService_UpdateKategoriMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateKategoriMenurReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KategoriMenuServiceServer).UpdateKategoriMenu(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.KategoriMenuService/UpdateKategoriMenu",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KategoriMenuServiceServer).UpdateKategoriMenu(ctx, req.(*UpdateKategoriMenurReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _KategoriMenuService_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "grpc.KategoriMenuService",
	HandlerType: (*KategoriMenuServiceServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "AddKategoriMenu",
			Handler:    _KategoriMenuService_AddKategoriMenu_Handler,
		},
		{
			MethodName: "ReadKategoriMenuByKategoriMenu",
			Handler:    _KategoriMenuService_ReadKategoriMenuByKategoriMenu_Handler,
		},
		{
			MethodName: "ReadKategoriMenu",
			Handler:    _KategoriMenuService_ReadKategoriMenu_Handler,
		},
		{
			MethodName: "UpdateKategoriMenu",
			Handler:    _KategoriMenuService_UpdateKategoriMenu_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "menu.proto",
}

func init() { proto.RegisterFile("menu.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 367 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x93, 0x5d, 0x4e, 0xfa, 0x40,
	0x14, 0xc5, 0x19, 0xbe, 0xf2, 0xe7, 0xfe, 0x8d, 0x98, 0xab, 0x21, 0x4d, 0x25, 0x06, 0xe7, 0x41,
	0xfb, 0x54, 0x12, 0x5c, 0x81, 0x24, 0x44, 0x13, 0xf5, 0x65, 0x8c, 0x0b, 0x28, 0xf4, 0xda, 0x54,
	0x3e, 0x5a, 0xa6, 0x53, 0x13, 0xf6, 0xe0, 0x7a, 0x5c, 0x81, 0xbb, 0x71, 0x13, 0xa6, 0x2d, 0x20,
	0xb4, 0xd4, 0x12, 0x5f, 0x7c, 0x9c, 0x93, 0x7b, 0xcf, 0x9c, 0xf9, 0xdd, 0xb9, 0x00, 0x53, 0x9a,
	0x85, 0xa6, 0x2f, 0x3d, 0xe5, 0x61, 0xd5, 0x91, 0xfe, 0x48, 0x3f, 0x75, 0x3c, 0xcf, 0x99, 0x50,
	0x37, 0xd6, 0x86, 0xe1, 0x73, 0x97, 0xa6, 0xbe, 0x5a, 0x24, 0x25, 0xfc, 0x8d, 0x01, 0x5e, 0xdb,
	0xf6, 0x9d, 0xa5, 0xc8, 0xf1, 0xa4, 0xfb, 0x40, 0xb3, 0x50, 0xd0, 0x1c, 0x39, 0x1c, 0x8c, 0x97,
	0x52, 0xe4, 0xa7, 0xb1, 0x0e, 0x33, 0x1a, 0x62, 0x4b, 0xc3, 0x36, 0x34, 0x6c, 0x0a, 0xc6, 0xd2,
	0xf5, 0x03, 0x57, 0x2b, 0xc7, 0x05, 0xdf, 0x02, 0xb6, 0xa0, 0x1e, 0x28, 0x4b, 0x85, 0x81, 0x56,
	0xe9, 0x30, 0xa3, 0x26, 0x96, 0xa7, 0xa8, 0x6b, 0x24, 0xc9, 0x52, 0x64, 0x0f, 0x17, 0x5a, 0x35,
	0xe9, 0x5a, 0x0b, 0xfc, 0x06, 0xce, 0x05, 0x59, 0x5b, 0x71, 0xfa, 0x8b, 0x5f, 0x84, 0xe3, 0x1f,
	0x0c, 0x78, 0x91, 0x53, 0xe0, 0xe3, 0x05, 0x1c, 0xba, 0x76, 0xc6, 0xac, 0x26, 0x52, 0x6a, 0xe6,
	0xca, 0x72, 0x11, 0x8f, 0x4a, 0x3e, 0x8f, 0x6a, 0x3e, 0x8f, 0x5a, 0x9a, 0xc7, 0x0b, 0x9c, 0xa4,
	0x5f, 0x11, 0xe7, 0x16, 0xd0, 0xb4, 0x26, 0x93, 0x4d, 0x59, 0x63, 0x9d, 0x8a, 0xf1, 0xbf, 0x67,
	0x98, 0xd1, 0xcc, 0xcd, 0xe2, 0xa7, 0x8b, 0xb4, 0x01, 0x7f, 0x67, 0xd0, 0x7a, 0xf2, 0x6d, 0x4b,
	0xd1, 0xa6, 0x2c, 0x23, 0xe2, 0x7f, 0x8f, 0x49, 0x87, 0x7f, 0x61, 0x9c, 0xad, 0xbf, 0xa2, 0xb4,
	0x3e, 0xf7, 0x3e, 0xcb, 0x70, 0xbc, 0x19, 0xf9, 0x91, 0xe4, 0xab, 0x3b, 0x22, 0x1c, 0x40, 0x33,
	0xf5, 0xb5, 0x51, 0x4b, 0xf0, 0x64, 0x7f, 0xbc, 0xde, 0x32, 0x93, 0x35, 0x31, 0x57, 0x6b, 0x62,
	0x0e, 0xa2, 0x35, 0xe1, 0x25, 0x0c, 0xe1, 0xec, 0x67, 0x9c, 0x78, 0xb9, 0x1f, 0xf4, 0xb9, 0xbe,
	0xf7, 0x74, 0x78, 0x09, 0x6f, 0xe1, 0x28, 0x5d, 0x87, 0x39, 0x21, 0x75, 0x7d, 0xb7, 0xef, 0xd2,
	0xe9, 0x1e, 0x30, 0x3b, 0x57, 0x6c, 0x27, 0x3d, 0xbb, 0x27, 0x9e, 0x8f, 0x63, 0x58, 0x8f, 0x95,
	0xab, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x54, 0x7f, 0xef, 0x69, 0x04, 0x00, 0x00,
}
